<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>与或非</title>
      <link href="/2023/12/27/%E4%B8%8E%E6%88%96%E9%9D%9E/"/>
      <url>/2023/12/27/%E4%B8%8E%E6%88%96%E9%9D%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="运算法则"><a href="#运算法则" class="headerlink" title="运算法则"></a>运算法则</h1><table><thead><tr><th align="center"></th><th align="center"></th><th align="left">运算</th><th align="left">用法</th></tr></thead><tbody><tr><td align="center"><strong>与</strong></td><td align="center">&amp;</td><td align="left">同为1，结果为 1，任意0，结果为0</td><td align="left">data&amp;0x01：验证数据某一位是否为1</td></tr><tr><td align="center"><strong>或</strong></td><td align="center">|</td><td align="left">同为0，结果为0，任意 1，结果为 1</td><td align="left">data|0x01： 对数据某一位置为1</td></tr><tr><td align="center"><strong>非</strong></td><td align="center">!</td><td align="left">!1&#x3D;0；!0&#x3D;1</td><td align="left"></td></tr><tr><td align="center"><strong>异或</strong></td><td align="center">^</td><td align="left">不同为1，相同为0</td><td align="left"></td></tr><tr><td align="center"><strong>同或</strong></td><td align="center"><strong>⊙</strong></td><td align="left">相同为1，不同为0</td><td align="left"></td></tr></tbody></table><p>Tips：在程序中，一般没有<strong>同或运算符：可以用两个数的异或结果再次异或1</strong>，即可得到两个数的同或结果。</p><p>1010 ^ 1110 &#x3D; 0100 ^ 1111 &#x3D; 1011</p><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><p>使用<code>与、或、非</code>运算可以很大程度上简化代码</p><h2 id="清零"><a href="#清零" class="headerlink" title="清零"></a>清零</h2><blockquote><p>两数同为1，&amp;的结果才为1，因此<strong>任何一个数<code>&amp;</code>0结果为0</strong></p><p>1011 1100 &amp; 0000 0000 &#x3D; 0000 0000</p></blockquote><h2 id="置一"><a href="#置一" class="headerlink" title="置一"></a>置一</h2><blockquote><p>两数中有1，|的结果便为1，因此可以</p><p>0000 0000 | 0000 0001 &#x3D; 0000 0001</p></blockquote><h1 id="扩展用法"><a href="#扩展用法" class="headerlink" title="扩展用法"></a>扩展用法</h1><p>在不同场景中根据场景需求可以灵活变通使用</p><h2 id="TMOD参数设置"><a href="#TMOD参数设置" class="headerlink" title="TMOD参数设置"></a>TMOD参数设置</h2><blockquote><p><code>&amp;</code>：<strong>低四位清零</strong>，高四位保持不变</p><p>1010 0011 &amp; 1111 0000 &#x3D; 1010 0000</p></blockquote><blockquote><p><code>|</code>：<strong>第一位置为1</strong>，高四位不变</p><p>1010 0011 | 0000 0001 &#x3D; 1010 0001</p></blockquote><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51单片机STC82C52RC入门学习</title>
      <link href="/2023/12/24/51%20%E5%8D%95%E7%89%87%E6%9C%BA%20STC82C52RC%20%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/12/24/51%20%E5%8D%95%E7%89%87%E6%9C%BA%20STC82C52RC%20%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Keil-STC-ISP"><a href="#Keil-STC-ISP" class="headerlink" title="Keil &amp; STC-ISP"></a>Keil &amp; STC-ISP</h1><h2 id="Keil-uVision5-C51"><a href="#Keil-uVision5-C51" class="headerlink" title="Keil uVision5 C51"></a>Keil uVision5 C51</h2><p><code>Keil uVision</code> 有很多版本，<code>STC89C51RC</code>单片机用的是C51版本</p><blockquote><p><strong>Project</strong> → <strong>new vision project</strong> → 选存放位置 → 选择 <strong>AT89C52</strong>单片机 →  创建完毕 → 在<strong>Options for Target&#x2F;Output</strong> 下点选上<strong>Create HEX_File</strong>，这样就可以编译后生成可烧录文件了</p></blockquote><blockquote><p><strong>Target&#x2F;Source Group</strong> 下右键，<strong>ADD NEW</strong>为新建一个文件，<strong>ADD Existing</strong>为添加文件目录下的其他文件</p></blockquote><h2 id="STC-ISP"><a href="#STC-ISP" class="headerlink" title="STC-ISP"></a>STC-ISP</h2><blockquote><p>单片机型号选择 <strong>STC89C52RC&#x2F;LE52RC</strong>，其他系统自动    </p></blockquote><hr><h1 id="STC89C52单片机核心"><a href="#STC89C52单片机核心" class="headerlink" title="STC89C52单片机核心"></a>STC89C52单片机核心</h1><p><img src="https://telegra.ph/file/2676ff44110b393fae73f.png" alt="STC89C52单片机核心"></p><h1 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h1><p><strong>单片机 I&#x2F;O 两种状态，1为高电平即5V，0为低电平0V</strong></p><h3 id="点亮LED"><a href="#点亮LED" class="headerlink" title="点亮LED"></a>点亮LED</h3><p>使用十六进制数可直接控制8个LED灯的亮灭，也可使用2进制数控制单独一个等的状态：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P2 = <span class="number">0x01</span>; <span class="comment">// 0000 0001</span></span><br></pre></td></tr></table></figure><h3 id="跑马灯"><a href="#跑马灯" class="headerlink" title="跑马灯"></a>跑马灯</h3><p>按顺序逐一点亮LED，并通过延时程序可被观察到</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNUM = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; <span class="comment">// P2_0 -&gt; P2_7</span></span><br><span class="line">LEDNUM++;</span><br><span class="line">    <span class="keyword">if</span> (LEDNUM &gt;= <span class="number">8</span>)&#123;</span><br><span class="line">        LEDNUM = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">这里让LED只亮一个完成跑马灯操作</span></span><br><span class="line"><span class="comment">用LEDNUM来记录亮灯位置，通过位运算来实现跑马特效</span></span><br><span class="line"><span class="comment">因为是定向移动，所以只需要判断LEDNUM是否达到临界值即可</span></span><br><span class="line"><span class="comment">使用位操作来控制亮灯位置，又因为高低电平的缘故，需要对高电平操作0000 1000</span></span><br><span class="line"><span class="comment">最后对高电平操作的结果进行取反操作 1111 0111</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    P2 = ~(<span class="number">0x01</span> &lt;&lt; LEDNUM);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; <span class="comment">// P2_7 -&gt; P2_0</span></span><br><span class="line"><span class="keyword">if</span> (LEDNUM == <span class="number">0</span>)&#123;</span><br><span class="line">LEDNUM = <span class="number">7</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">LEDNUM--;</span><br><span class="line">&#125;</span><br><span class="line">    P2 = ~(<span class="number">0x01</span> &lt;&lt; LEDNUM);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="延时-Delay"><a href="#延时-Delay" class="headerlink" title="延时 Delay"></a>延时 Delay</h3><p>不同频率芯片的延时各不相同</p><p><img src="https://telegra.ph/file/cf73a142aa6ce1ed274bb.png" alt="Delay延时计算器"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">()</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"></span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h1><p>按键使用方法和LED类似</p><h3 id="按键抖动"><a href="#按键抖动" class="headerlink" title="按键抖动"></a>按键抖动</h3><p>按键拨片在按下和抬起瞬间难免发生抖动造成数据波动</p><p>可通过延时函数来消除这5~10ms的波动影响</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (P3_1 == <span class="number">0</span>)&#123;</span><br><span class="line">        Delay_ms(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span>(P3_1 == <span class="number">0</span>);</span><br><span class="line">        Delay_ms(<span class="number">20</span>);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二进制计数"><a href="#二进制计数" class="headerlink" title="二进制计数"></a>二进制计数</h3><p>通过点按一个按键来实现二进制计数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> NUM = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (P3_1 == <span class="number">0</span>)&#123;</span><br><span class="line">        ... <span class="comment">//消除按键抖动        </span></span><br><span class="line">      NUM++;</span><br><span class="line">      P2 = ~NUM;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="按键控制LED移位"><a href="#按键控制LED移位" class="headerlink" title="按键控制LED移位"></a>按键控制LED移位</h3><p>通过按键实现LED的左右移动</p><p>其实就是跑马灯加上一个按键控制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNUM = <span class="number">0</span>;</span><br><span class="line">P2 = ~<span class="number">0x01</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (P3_0 == <span class="number">0</span>)&#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span>(P3_0 == <span class="number">0</span>);</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        LEDNUM++;</span><br><span class="line">        <span class="keyword">if</span> (LEDNUM &gt;= <span class="number">8</span>)&#123;</span><br><span class="line">            LEDNUM = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        P2 = ~(<span class="number">0x01</span>&lt;&lt;LEDNUM);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (P3_1 == <span class="number">0</span>)&#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span>(P3_1 == <span class="number">0</span>);</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (LEDNUM == <span class="number">0</span>)&#123;</span><br><span class="line">            LEDNUM = <span class="number">7</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            LEDNUM--;</span><br><span class="line">        &#125;</span><br><span class="line">        P2 = ~(<span class="number">0x01</span>&lt;&lt;LEDNUM);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数码管"><a href="#数码管" class="headerlink" title="数码管"></a>数码管</h1><p>数码管由74HC138译码器和动态数码管模块组成</p><p>数码管需要进行消影，在快速位选段选中上一个数据会窜到下一位数据里，形成重影</p><p>只需要加入一个极短的延时就可以解决</p><h1 id="矩阵键盘"><a href="#矩阵键盘" class="headerlink" title="矩阵键盘"></a>矩阵键盘</h1><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h1 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h1><h4 id="波特率计算器"><a href="#波特率计算器" class="headerlink" title="波特率计算器"></a>波特率计算器</h4><p>在STC-IPS软件中有波特率计算功能，注意参数配置就好了，误差比较大的时候可以勾选 波特率倍速SMOD 来降低误差</p><table><thead><tr><th align="center">系统频率</th><th align="center">波特率</th><th align="center">波特率倍速SMOD</th><th align="center">误差</th></tr></thead><tbody><tr><td align="center">11.0592MHz</td><td align="center">4800</td><td align="center">看情况勾选</td><td align="center">~</td></tr><tr><td align="center"><strong>UART选择</strong></td><td align="center"><strong>UART数据位</strong></td><td align="center"><strong>波特率发生器</strong></td><td align="center"><strong>定时器时钟</strong></td></tr><tr><td align="center">串口1</td><td align="center">8位数据</td><td align="center">定时器1（8位重载）</td><td align="center">12T（FOSC&#x2F;12）</td></tr></tbody></table><p>发送和接受设备需要保持相同的波特率才能正确的传输数据，还有应尽可能<strong>不要将传输间隔小于误差值</strong>，可通过短暂的延时函数解决！</p><h1 id="LED点阵屏"><a href="#LED点阵屏" class="headerlink" title="LED点阵屏"></a>LED点阵屏</h1><h1 id="时钟-DS1302"><a href="#时钟-DS1302" class="headerlink" title="时钟 DS1302"></a>时钟 DS1302</h1><p><img src="https://telegra.ph/file/fa23c6a0fd5ddbca5745f.png" alt="DS1302工作原理"></p><h1 id="I2C总线"><a href="#I2C总线" class="headerlink" title="I2C总线"></a>I2C总线</h1><h1 id="AT24C02"><a href="#AT24C02" class="headerlink" title="AT24C02"></a>AT24C02</h1><blockquote><p>AT24C02掉电不丢失存储器</p></blockquote><p><img src="https://telegra.ph/file/bc09ddd57ea5f1e8f3082.png" alt="AT24C02掉电不丢失存储器"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51 </tag>
            
            <tag> STC89C52RC </tag>
            
            <tag> AT24C02 </tag>
            
            <tag> I2C </tag>
            
            <tag> DS1302 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态博客 Hexo 的搭建与使用</title>
      <link href="/2023/12/13/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%20Hexo%20%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/12/13/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%20Hexo%20%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>Hexo</strong> + <strong>Github</strong> 静态博客搭建，好处是不需要购买域名、服务器资源，也不需要繁琐的备案，从难易程度上静态博客的搭建是比动态的要简单些的，唯一的坏处可能就是在其他设备上只能访问不能修改吧，问题不大。</p></blockquote><p>Hexo 静态博客安装需要以下几个必要插件：<code>NodeJS</code>、<code>Git</code>、<code>Hexo</code></p><p>NodeJS 是 Hexo 的必要插件，而 Git 是推送到 Github 的必要插件</p><h1 id="NodeJS-安装-环境搭建"><a href="#NodeJS-安装-环境搭建" class="headerlink" title="NodeJS 安装 &amp; 环境搭建"></a>NodeJS 安装 &amp; 环境搭建</h1><blockquote><p><strong>NodeJS</strong> 的安装说实在搞得头大，总是莫名其妙的出现各种问题，像 cnpm 系统不识别之类的，总之就是非常头大，不过还好，总算是找到了一个没有任何报错的安装方法→ <a href="https://www.bilibili.com/video/BV19F411t7zX/?vd_source=b4e7a930b6168115887cecaf26f330e6">BV19F411t7zX</a>。</p></blockquote><h2 id="下载-NodeJS"><a href="#下载-NodeJS" class="headerlink" title="下载 NodeJS"></a>下载 NodeJS</h2><p><a href="https://nodejs.cn/download/">NodeJS 官网</a> 下载对应版本，这里使用的是 Windows-64 安装包</p><p><img src="https://telegra.ph/file/c68e8759fcae259c73262.png" alt="NodeJS官网下载对应版本"></p><p>解压后新建两个文件夹：用来放缓存文件的 <code>node_cache</code> 和用来放系统全局文件的 <code>node_global</code></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>在<strong>系统变量</strong>中新建一个  <code>NODE_HOME</code></p><p><img src="https://telegra.ph/file/9ce4cfb1fbe4d9602b815.png" alt="配置环境变量"></p><p>然后再从<strong>系统变量</strong>的 <code>PATH</code> 中添加下面三段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%NODE_HOME%</span><br><span class="line">%NODE_HOME%\node_cache</span><br><span class="line">%NODE_HOME%\node_global</span><br></pre></td></tr></table></figure><p>以上工作完成后，再终端中输入 <code>node -v</code>、<code>npm -v</code> 测试环境变量是否配置成功</p><h2 id="配置-npm-cnpm"><a href="#配置-npm-cnpm" class="headerlink" title="配置 npm &amp; cnpm"></a>配置 npm &amp; cnpm</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 配置 npm 全局</span><br><span class="line">npm config set prefix &quot;node_global 的路径&quot;</span><br><span class="line">// 配置 npm 缓存</span><br><span class="line">npm config set cache &quot;node_cache 的路径&quot;</span><br><span class="line">// 国内下载慢所以用阿里的镜像下载</span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>没有报错就说明已经成功配置了，然后就可以下载镜像文件了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm</span><br></pre></td></tr></table></figure><p>安装成功后输入 <code>cnpm -v</code> 测试是否成功，在 node_global 文件夹下也可以看到 cnpm 文件，NodeJS 的安装配置到此完成！</p><hr><h1 id="Git-安装-使用"><a href="#Git-安装-使用" class="headerlink" title="Git 安装 &amp; 使用"></a>Git 安装 &amp; 使用</h1><blockquote><p><a href="https://git-scm.com/downloads">Git</a> 直接下载对应版本安装即可，一直下一步傻瓜式安装</p></blockquote><h2 id="Git-使用"><a href="#Git-使用" class="headerlink" title="Git 使用"></a>Git 使用</h2><blockquote><p>Git的使用在以后用到的时候再进行更新，目前仅为上传不同名文件夹内容到远程仓库的不同分支中，方法也非常简单，使用Github桌面端就可以进行操作，把仓库克隆到要上传的文件夹父目录，克隆完成后把名字一改再重新寻址就可以了</p></blockquote><hr><h1 id="Hexo-安装-使用"><a href="#Hexo-安装-使用" class="headerlink" title="Hexo 安装 &amp; 使用"></a>Hexo 安装 &amp; 使用</h1><h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><blockquote><p>Hexo 官网有提供的详尽的 <a href="https://hexo.io/zh-cn/docs/">安装使用文档</a>，需要注意的是，Hexo 需要搭配 Git 和 NodeJS 使用，在安装之前需要把前面两个提前安装！也可以参考→<a href="https://www.bilibili.com/video/BV1Yb411a7ty/?vd_source=b4e7a930b6168115887cecaf26f330e6">BV1Yb411a7ty</a></p></blockquote><p>Hexo 使用的是命令行进行操作，首先<strong>安装 Hexo</strong>，hexo -v 测试安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>在博客文件夹根目录下<strong>初始化 Hexo</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install// 初始化成功了就不需要再执行这步了</span><br></pre></td></tr></table></figure><h2 id="Hexo-基本操作"><a href="#Hexo-基本操作" class="headerlink" title="Hexo 基本操作"></a>Hexo 基本操作</h2><table><thead><tr><th align="center">功能</th><th align="center">代码</th><th align="center">代码全称</th></tr></thead><tbody><tr><td align="center">启动本地预览</td><td align="center">hexo s</td><td align="center">hexo server</td></tr><tr><td align="center">清理本地缓存</td><td align="center">hexo clean</td><td align="center">hexo clean</td></tr><tr><td align="center">生成HTML文件</td><td align="center">hexo g</td><td align="center">hexo generate</td></tr><tr><td align="center">推送到云端</td><td align="center">hexo d</td><td align="center">hexo deploy</td></tr><tr><td align="center">创建新的文章</td><td align="center">hexo n</td><td align="center">hexo new</td></tr></tbody></table><h2 id="文章「头文件」"><a href="#文章「头文件」" class="headerlink" title="文章「头文件」"></a>文章「头文件」</h2><p>使用 <code>hexo new</code> 创建新的文章，Hexo 会自动帮我们在文章中生成一个「头文件」，包含各种文章信息：文章标题、创建时间、修改时间、标签、分类、封面等，需要自己进行完善，<a href="#jump_%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86">password</a> 不属于 Hexo 自带，需要自行安装使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">title: 静态博客 Hexo 的搭建与使用教程// 文章标题</span><br><span class="line">date: 2023-10-14// 创建时间</span><br><span class="line">updated: 2023-10-16// 修改时间</span><br><span class="line">tags: // 标签，多个标签也可以用[a,b]</span><br><span class="line">  - 安装配置</span><br><span class="line">  - 使用教程</span><br><span class="line">categories: // 分类</span><br><span class="line">- 学习// 父类</span><br><span class="line">- 心得// 子类</span><br><span class="line">cover: https://url// 文章封面</span><br><span class="line">password: 12345// 密码</span><br></pre></td></tr></table></figure><h2 id="Blog-部署到-Github"><a href="#Blog-部署到-Github" class="headerlink" title="Blog 部署到 Github"></a>Blog 部署到 Github</h2><p>首先再本目录下安装部署插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>插件装完后去 <code>_config.yml</code> 里进行必要配置！在文件最下面修改 <code># Deployment</code> 里面的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: https://github.com/choomoray/choomoray.github.io.git</span><br><span class="line">branch: blog// 可以不写，默认保存到 Github 仓库的 master 分支中</span><br></pre></td></tr></table></figure><hr><h1 id="Hexo-主题-美化（待完成……）"><a href="#Hexo-主题-美化（待完成……）" class="headerlink" title="Hexo 主题 &amp; 美化（待完成……）"></a>Hexo 主题 &amp; 美化（待完成……）</h1><p>在 <a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a> 下载好压缩包，解压到 Theme 文件夹，然后在 <code>_config.yml</code> 里把默认的 Theme 替换成需要修改的主题文件夹名就大功告成了！</p><blockquote><p>主题美化可以参考作者写的<a href="https://butterfly.js.org/">详细文档</a></p><p>这里就根据我自己的个人喜好来进行优化，大致分为几大块：</p></blockquote><p><img src="https://telegra.ph/file/d23704fa7d9b21f8da285.png" alt="网站基本信息"></p><p><img src="https://telegra.ph/file/b295c232f379eda71bcd5.png" alt="主页基本信息"></p><p><img src="https://telegra.ph/file/de9d7be2b0ac82735b545.png" alt="文章页基本信息"></p><h2 id="网站基本信息"><a href="#网站基本信息" class="headerlink" title="网站基本信息"></a>网站基本信息</h2><p>首先是网站的基本信息，把网站标题、副标题等修改为自己的，在博客根目录的<code>主配置文件</code>里修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">CHOOMORAY</span><span class="comment"># 网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span><span class="comment"># 网站副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">choomoray</span> <span class="comment"># 作者名</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="网站图标ICON"><a href="#网站图标ICON" class="headerlink" title="网站图标ICON"></a>网站图标ICON</h3><h3 id="仿键盘敲入文字效果"><a href="#仿键盘敲入文字效果" class="headerlink" title="仿键盘敲入文字效果"></a>仿键盘敲入文字效果</h3><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><h3 id="基础参数设置"><a href="#基础参数设置" class="headerlink" title="基础参数设置"></a>基础参数设置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="comment"># image</span></span><br><span class="line">  <span class="attr">display_title:</span> <span class="literal">true</span><span class="comment"># 是否显示网站标题</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span> <span class="comment"># 固定网站标题</span></span><br></pre></td></tr></table></figure><h3 id="顶栏菜单目录"><a href="#顶栏菜单目录" class="headerlink" title="顶栏菜单目录"></a>顶栏菜单目录</h3><blockquote><p><code>menu</code> 只是控制是否显示，<strong>标签、分类</strong>需要单独创建 Page 来显示，具体操作在<a href="#jump_%E5%8A%9F%E8%83%BD%E8%A1%A5%E5%85%85%E9%A1%B5">功能补充页</a> </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span><span class="comment"># Menu 目录</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">时间轴:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="attr">ME:</span> <span class="string">/diary/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><h3 id="顶栏图片"><a href="#顶栏图片" class="headerlink" title="顶栏图片"></a>顶栏图片</h3><table><thead><tr><th align="left">配置</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">index_img</td><td align="left">主页的 top_img</td></tr><tr><td align="left">default_top_img</td><td align="left">默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td align="left">archive_img</td><td align="left">归档页面的 top_img</td></tr><tr><td align="left">tag_img</td><td align="left">tag 子页面 的 默认 top_img</td></tr><tr><td align="left">tag_per_img</td><td align="left">tag 子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td align="left">category_img</td><td align="left">category 子页面 的 默认 top_img</td></tr><tr><td align="left">category_per_img</td><td align="left">category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h2 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h2><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>修改 <code>主配置文件</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/avatar.png</span><span class="comment"># 图片目录</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span><span class="comment"># 头像会一直转圈</span></span><br></pre></td></tr></table></figure><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><h3 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h3><blockquote><p>在写文章时添加，在 <code>Front-matter</code> 添加 <code>cover: url</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">Butterfly</span> <span class="string">主题美化</span> <span class="string">&amp;</span> <span class="string">功能补充</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-10-16 12:23:52</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">Hexo</span>, <span class="string">Butterfly</span>]</span><br><span class="line"><span class="attr">categories:</span> <span class="string">DIY</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://cdn.pixabay.com/photo/2023/09/07/14/26/cat-8239223_1280.png</span></span><br></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>主题提供了几种代码块可供选择，修改关键词 <code>highlight_theme</code></p><p>还包括代码块的复制（ <code>highlight_copy</code> ）、展开（ <code>highlight_shrink</code> ）、换行（<code>code_word_wrap</code>  ）以及高度限制（ <code>highlight_height_limit</code> ）</p><h4 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h4><p>修改<code>主题配置文件</code>中代码块的高度限制（默认为false，直接填入想要的高度即可）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_height_limit:</span> <span class="number">200</span> <span class="comment"># unit: px</span></span><br></pre></td></tr></table></figure><h1 id="功能补充"><a href="#功能补充" class="headerlink" title="功能补充"></a>功能补充</h1><h2 id="标签页-分类页"><a href="#标签页-分类页" class="headerlink" title="标签页 &amp; 分类页"></a><span id="jump_功能补充页">标签页 &amp; 分类页</span></h2><p>模板默认是没有标签页和分类页的，需要我们自己添加，非常简单，在命令行中分别敲入下面两行代码，<code>source</code> 目录下就会自动生成对应文件夹，里面的 index.md 就是对应文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">tags</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">categories</span></span><br></pre></td></tr></table></figure><h2 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h2><p>非常实用的搜索功能，但是 Hexo 原生并不支持，需要安装依赖：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-search</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure><p>修改<code>主配置文件</code>，添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span><span class="comment"># 搜索</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./search.xml</span></span><br></pre></td></tr></table></figure><p>在主题中开启搜索，在<code>主题配置文件</code>添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="bullet">-</span>  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">+</span>  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a><span id='jump_文章加密'>文章加密</span></h2><blockquote><p>静态博客文章加密典型的防君子不防小人，程序只是卡在了调用那里，后台该能看到的还是可以看到的！</p></blockquote><p>文章加密同样需要依赖支持：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-blog-encrypt</span></span><br></pre></td></tr></table></figure><p>在<code>主配置文件</code>中添加下面代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安全</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">这里有东西被加密了，需要输入密码查看哦。</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">您好,</span> <span class="string">这里需要密码.</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码A</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码B</span>&#125;</span><br><span class="line">  <span class="attr">template:</span> <span class="string">&lt;div</span> <span class="string">id=&quot;hexo-blog-encrypt&quot;</span> <span class="string">data-wpm=&quot;&#123;&#123;hbeWrongPassMessage&#125;&#125;&quot;</span> <span class="string">data-whm=&quot;&#123;&#123;hbeWrongHashMessage&#125;&#125;&quot;&gt;&lt;div</span> <span class="string">class=&quot;hbe-input-container&quot;&gt;&lt;input</span> <span class="string">type=&quot;password&quot;</span> <span class="string">id=&quot;hbePass&quot;</span> <span class="string">placeholder=&quot;&#123;&#123;hbeMessage&#125;&#125;&quot;</span> <span class="string">/&gt;&lt;label&gt;&#123;&#123;hbeMessage&#125;&#125;&lt;/label&gt;&lt;div</span> <span class="string">class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script</span> <span class="string">id=&quot;hbeData&quot;</span> <span class="string">type=&quot;hbeData&quot;</span> <span class="string">data-hmacdigest=&quot;&#123;&#123;hbeHmacDigest&#125;&#125;&quot;&gt;&#123;&#123;hbeEncryptedData&#125;&#125;&lt;/script&gt;&lt;/div&gt;</span></span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">抱歉,</span> <span class="string">这个密码看着不太对,</span> <span class="string">请再试试.</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">这个文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure><p>在文章中使用加密，在「头文件」中添加 <code>password</code> 关键词即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><p><img src="https://telegra.ph/file/1a613de875508c959d5bd.png"></p><h2 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h2><blockquote><p><a href="https://hexo.io/zh-cn/docs/asset-folders">官方文档</a>简单易懂，要比网上一个答案到处抄来的靠谱（花了好几个小时也没成功）。总结一下：</p></blockquote><p>首先要打开<code>主配置文档</code>中的<code>允许使用本地静态资源</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后在<code>source</code>文件夹下创建<code>images</code>文件，把图片放入images文件夹就可以了，引用格式如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">![</span><span class="string">图片描述](../images/....../1.png)</span></span><br></pre></td></tr></table></figure><p>需要注意的是：图片路径必须使用<code>/</code></p><hr>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> 使用教程 </tag>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> NodeJS </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
